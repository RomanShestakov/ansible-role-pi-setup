#+TITLE: README for Ansible setup for RPI cluster
#+AUTHOR:   Roman Shestakov
#+LANGUAGE: en
* Description

A Vagrant VM provisioned with ansible. This VM uses standard Debian
precise64 box. It could be used as a base box for certain dev projects
as it has provisioning for some basic development tools, such as emacs, tmux, etc.

* Raspberry Pi
** how to build the image
cd /Users/romanshestakov/Downloads
diskutil unmountDisk /dev/disk2
sudo dd bs=1m if=2016-03-18-raspbian-jessie-lite.img of=/dev/disk2
ssh pi@192.168.1.82
ssh pi@192.168.1.83
ssh pi@192.168.1.84

** run network setup:
# how to check agent forward:
ansible all -a 'ssh -T git@github.com' -i production.ini -vvvv
# ansible-playbook -i provision/ansible/playbooks/roles/internal/pi_setup/networking/inventory provision/ansible/playbooks/roles/internal/pi_setup/networking/main.yml -k
ansible-playbook provision/ansible/playbooks/raspberry_init.yml -i provision/ansible/playbooks/pi_inventory --extra-vars="ssid=BTHub5-HFQX2 psk=2aeced3525" --ask-pass --sudo -c paramiko
ansible-playbook pi_init.yml -i inventory/pi_inventory --extra-vars="ssid=BTHub5-HFQX2 psk=2aeced3525" --ask-pass

ansible-playbook provision/ansible/playbooks/raspberry.yml -i provision/ansible/playbooks/production.ini --ask-pass --sudo -c paramiko --ask-vault-pass
ansible-playbook raspberry.yml -i production.ini --ask-pass --ask-vault-pass

ansible-playbook pi.yml -i inventory/inventory.ini --ask-pass --ask-vault-pass
** How to encrypt ansible-vault:
ansible-vault encrypt secretvars.yml
** TODO how to setup wifi
/etc/wpa_supplicant/wpa_supplicant.conf
network={
   ssid="BTHub5-HFQX2"
   psk="2aeced3525"
}
** how to connect
user: pi
password: raspberry
** how to add more space:
sudo raspi-config
** how to reconfigure locales
sudo dpkg-reconfigure locales
(add en_US.UTF-8 UTF-8)
** change host name from 'raspberrypi' in the files:
sudo vi /etc/hosts
sudo vi /etc/hostname
sudo /etc/init.d/hostname.sh
sudo reboot
# to run ansible book
# ansible-playbook provision/ansible/playbooks/raspberry.yml -i provision/ansible/playbooks/production.ini --ask-pass --sudo -c paramiko
ansible-playbook provision/ansible/playbooks/raspberry.yml -i provision/ansible/playbooks/production.ini --ask-pass --sudo -c paramiko --limit all[0-2]

* Some References
http://www.jeffgeerling.com/blog/server-vm-images-ansible-and-packer
https://github.com/geerlingguy/packer-ubuntu-1404
https://featheredtoast.wordpress.com/2013/10/14/vagrant-packer-ansible-arch-linux-virtualization-made-in-heaven/
http://elasticdog.com/2013/08/developing-ansible-playbooks-for-arch-linux-with-vagrant/
http://superuser.com/questions/745881/how-to-authenticate-to-a-vm-using-vagrant-up
https://blog.engineyard.com/2014/building-a-vagrant-box
https://techpunch.co.uk/development/high-availability-image-deployments-in-aws-using-ansible-and-packer
http://raspberrypg.org/2015/06/step-5-update-installing-postgresql-on-my-raspberry-pi-1-and-2/
http://www.pidramble.com/wiki/hardware/rgb-led-gpio
http://www.rs-online.com/designspark/electronics/blog/ten-essential-raspberry-pi-projects
https://howtotec.net/raspberrypi/raspberry-pi-projects-best-cool-projects-for-your-raspberry-pi-b-2
https://dantehranian.wordpress.com/2015/07/24/managing-secrets-with-ansible-vault-the-missing-guide-part-1-of-2/
